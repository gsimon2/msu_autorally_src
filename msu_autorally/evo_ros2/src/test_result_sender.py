#!/usr/bin/env python
import rospy
import argparse
import numpy as np
import time
import random

import zmq



class Transporter():
	def __init__(self, cmd_args):
		self.debug = True
		
		# Set up socket communication using ZMQ
		self.server_ip_addr = '127.0.0.1'
		self.genome_port = 5027
		self.result_port = 5037
		
		self.context = zmq.Context()
		self.genome_receiver = self.context.socket(zmq.PULL)
		self.genome_receiver.connect('tcp://{}:{}'.format(self.server_ip_addr, self.genome_port))
		self.result_sender = self.context.socket(zmq.PUSH)
		self.result_sender.connect('tcp://{}:{}'.format(self.server_ip_addr, self.result_port)) 
		
		
		if self.debug:
			print('Genome Connection: {}'.format('tcp://{}:{}'.format(self.server_ip_addr, self.genome_port)))
			print('Result Connection: {}'.format('tcp://{}:{}'.format(self.server_ip_addr, self.result_port)))
		
		try:
			while True:
				print('Waiting for genome...')
				self.recv_genome = self.genome_receiver.recv_json()
				
				
				#print('Genome received: {}'.format(self.recv_genome))
				self.base_results = ('Time', [0.0525, 0.1375, 0.24, 0.37, 0.455, 0.5325, 0.645, 0.74, 0.8575, 0.9375, 1.0425, 1.135, 1.2525, 1.345, 1.44, 1.54, 1.6400000000000001, 1.7349999999999999, 1.8375, 1.94, 2.035, 2.1425, 2.2475, 2.3449999999999998, 2.4625, 2.5725, 2.6425, 2.75, 2.86, 2.9425, 3.035, 3.13, 3.245, 3.3375, 3.4425, 3.555, 3.6425, 3.7425, 3.84, 3.945, 4.0425, 4.1775, 4.2475, 4.3575, 4.4425, 4.5575, 4.6375, 4.7475000000000005, 4.855, 4.95, 5.0275, 5.125, 5.2275, 5.375, 5.4575, 5.5475, 5.6425, 5.745, 5.845, 5.955, 6.045, 6.1475, 6.245, 6.3425, 6.435, 6.54, 6.645, 6.75, 6.8275, 6.945, 7.065, 7.135, 7.25, 7.345, 7.4275, 7.5475, 7.6425, 7.74, 7.8425, 7.9399999999999995, 8.03, 8.14, 8.2625, 8.35, 8.4475, 8.545, 8.64, 8.76, 8.855, 8.95, 9.035, 9.1375, 9.245, 9.3475, 9.45, 9.5375, 9.6375, 9.745, 9.8425, 9.94, 10.0375, 10.1425, 10.2475, 10.3425, 10.44, 10.5425, 10.6475, 10.7375, 10.84, 10.945, 11.0575, 11.1525, 11.2375, 11.3275, 11.4675, 11.5675, 11.6425, 11.7375, 11.8325, 11.95, 12.065, 12.1275, 12.2475, 12.3625, 12.425, 12.535, 12.6525, 12.7425, 12.8275, 12.9275, 13.065, 13.1475, 13.2525, 13.345, 13.4525, 13.53, 13.6375, 13.7375, 13.8475, 13.9475, 14.035, 14.14, 14.2625, 14.345, 14.445, 14.54, 14.64, 14.735, 14.8575, 14.9725, 15.04, 15.155, 15.2375, 15.34, 15.44, 15.56, 15.64, 15.765, 15.855, 15.945, 16.035, 16.1575, 16.245, 16.35, 16.445, 16.5475, 16.645, 16.7425, 16.86, 16.9575, 17.0375, 17.1475, 17.2525, 17.35, 17.4475, 17.545, 17.645, 17.74, 17.8475, 17.945, 18.05, 18.14, 18.2575, 18.34, 18.45, 18.5425, 18.6425, 18.725, 18.8775, 18.945, 19.0475, 19.1425, 19.2475, 19.34, 19.4475, 19.535, 19.6475, 19.745, 19.8575, 19.9575, 20.0325, 20.1375, 20.245, 20.3475, 20.45, 20.5425, 20.635, 20.745, 20.84, 20.9375, 21.045, 21.1375, 21.2625, 21.3525, 21.4575, 21.555, 21.6625, 21.745, 21.845, 21.9325, 22.0375, 22.1475, 22.2375, 22.345, 22.4375, 22.545, 22.66, 22.7375, 22.855, 22.9425, 23.0375, 23.1475, 23.2375, 23.36, 23.4725, 23.5375, 23.69, 23.7425, 23.8475, 23.935, 24.0325, 24.16, 24.23, 24.325, 24.445, 24.5425, 24.645, 24.755, 24.85, 24.955, 25.0475, 25.1275, 25.2375, 25.3575, 25.4375, 25.5475, 25.655, 25.74, 25.8325, 25.935, 26.0425, 26.1325, 26.255, 26.3675, 26.435, 26.54, 26.6325, 26.7525, 26.84, 26.94, 27.0375, 27.1525, 27.2325, 27.345, 27.4375, 27.5325, 27.6525, 27.765, 27.86, 27.9275, 28.0375, 28.16, 28.2475, 28.3775, 28.4525, 28.55, 28.6375]), ('Goal Speed', (1.4025000000000003, 1.5025, 1.6025000000000005, 1.7000000000000006, 1.8000000000000003, 1.9, 2.0100000000000002, 2.1, 2.1999999999999997, 2.3000000000000003, 2.4, 2.5000000000000004, 2.6, 2.7000000000000006, 2.8000000000000003, 2.9025000000000003, 3.0000000000000004, 3.1, 3.1999999999999997, 3.3024999999999998, 3.4025000000000003, 3.5075, 3.6, 3.7025, 3.8024999999999998, 3.9, 4.0, 4.102500000000001, 4.200000000000001, 4.300000000000001, 4.4025, 4.5, 4.602500000000001, 4.700000000000001, 4.8100000000000005, 4.9025, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 4.899999999999999, 4.795, 4.699999999999999, 4.6, 4.5, 4.399999999999999, 4.299999999999999, 4.199999999999999, 4.1, 4.0, 3.8999999999999986, 3.799999999999999, 3.6999999999999993, 3.58, 3.4974999999999987, 3.3999999999999986, 3.299999999999999, 3.1999999999999993, 3.0999999999999996, 3.0, 2.897500000000001, 2.8000000000000007, 2.6999999999999993, 2.599999999999998, 2.5, 2.3999999999999986, 2.3000000000000007, 2.1999999999999993, 2.099999999999998, 2.0, 1.8999999999999986, 1.7974999999999994, 1.6999999999999993, 1.5975000000000001, 1.5, 1.3999999999999986, 1.3000000000000007, 1.1999999999999993, 1.0999999999999979, 1.0, 0.8999999999999986, 0.8000000000000007, 0.6999999999999993, 0.5999999999999979, 0.5, 0.3999999999999986, 0.3000000000000007, 0.1999999999999993, 0.09999999999999787, 0.0, 0.10000000000000142, 0.1999999999999993, 0.3000000000000007, 0.40249999999999986, 0.504999999999999, 0.6000000000000014, 0.6999999999999993, 0.8000000000000007, 0.9000000000000021, 1.0, 1.1024999999999991, 1.1999999999999993, 1.3000000000000007, 1.4000000000000021, 1.5, 1.6000000000000014, 1.6999999999999993, 1.8000000000000007, 1.9000000000000021, 2.0, 2.1000000000000014, 2.1999999999999993, 2.3000000000000007, 2.400000000000002, 2.5, 2.602499999999999, 2.6999999999999993, 2.8000000000000007, 2.9025, 3.0, 3.102499999999999, 3.1999999999999993, 3.3000000000000007, 3.400000000000002, 3.5, 3.6000000000000014, 3.6999999999999993, 3.8000000000000007, 3.9025, 4.0, 4.107500000000002, 4.199999999999999, 4.300000000000001, 4.400000000000002, 4.5, 4.600000000000001, 4.699999999999999, 4.800000000000001, 4.900000000000002, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 4.899999999999999, 4.899999999999999, 4.800000000000001, 4.699999999999999, 4.599999999999998, 4.5, 4.399999999999999, 4.300000000000001, 4.197499999999998, 4.099999999999998, 4.0, 3.897500000000001, 3.7974999999999994, 3.697499999999998, 3.599999999999998, 3.5, 3.3999999999999986, 3.294999999999998, 3.1999999999999993, 3.099999999999998, 3.0, 2.8999999999999986, 2.7925000000000004, 2.697499999999998, 2.599999999999998, 2.5, 2.3999999999999986, 2.3000000000000007, 2.1999999999999993, 2.099999999999998, 2.0, 1.8999999999999986, 1.7999999999999972, 1.697499999999998, 1.5974999999999966, 1.5, 1.3999999999999986, 1.2999999999999972, 1.2000000000000028, 1.1000000000000014, 1.0, 0.8999999999999986, 0.7999999999999972, 0.7000000000000028, 0.5925000000000011, 0.5, 0.3999999999999986, 0.29999999999999716, 0.20000000000000284, 0.0899999999999963, 0.0)), ('Actual Speed', (0.5006231669524174, 0.6421644330203522, 0.7664438391131511, 0.69819457728387, 0.9644349144837445, 1.1244833547403845, 1.0157914941487358, 1.2970904919750494, 1.3007087007339524, 1.489337691395959, 1.5497624770009608, 1.8734455672036745, 1.8197915821736481, 1.8325593117355317, 1.936054816290691, 2.1164464811108337, 2.4304972876237936, 2.349859714868984, 2.5674348221400365, 2.6684607365917072, 2.8649884433755077, 2.886891345489668, 2.9583542073779485, 3.197948394832939, 3.166048445366873, 3.337601812961151, 3.4677828518584746, 3.857909340507698, 3.8076786252834873, 3.835466754281379, 3.948850497356549, 3.830717591346831, 4.089777151337638, 4.308777019226058, 4.540926097822839, 4.498349182968809, 4.732035080100293, 4.842389055197479, 4.759610847064311, 5.1675078677169966, 5.342476616176572, 5.192228346660533, 5.390474584805003, 5.402375161352592, 5.283743146969648, 5.569654703707289, 5.577662957662959, 5.691715713936981, 5.565414762212444, 5.401335627661947, 5.826546218101541, 5.4170719690749305, 5.439148032215144, 5.6833872005002055, 5.250972645760902, 5.72735665313825, 5.54481450465416, 5.400977095822313, 5.855025430344419, 5.590611606288101, 5.728219120404402, 5.725443516180682, 5.7634140599359664, 5.596253268750564, 5.596683287334653, 5.82141684614673, 5.782821366347897, 5.483377176576596, 5.4308394550301955, 5.454623750403167, 5.813040205444335, 5.58947086396051, 5.476519899226851, 5.593008821707411, 5.649608500910775, 5.234614650664231, 5.015929035868281, 5.289381590523095, 5.597957351475778, 5.2652620533281915, 5.413503687849026, 5.372243147835113, 5.322914773831129, 5.540554872859639, 5.1711746576167625, 4.910706108885521, 5.1141357303996005, 5.429774192556335, 5.136087629959955, 5.378394066263294, 5.180652932266515, 5.110146655409566, 5.027927741310028, 4.956047119042736, 4.635493472805349, 4.954647872080948, 5.085892242679101, 4.737498632917849, 4.695172745756108, 4.240883333961261, 4.220234811273294, 4.386435813416044, 4.202553852063044, 3.890036181909265, 3.9252045636894763, 3.6629338873988466, 3.7398439707392974, 3.6447511265284613, 3.5955605451270882, 3.4952594518568985, 3.2891262041046234, 3.2992389659477888, 3.001561738116391, 2.7579279518411424, 2.837926236459351, 2.7904761363845356, 2.470144624736891, 2.6605626757296985, 2.4069592606164605, 2.256517621195967, 2.1697686915819885, 2.284057950565389, 1.8645819056224675, 1.904248938084623, 1.4977276863849598, 1.5934232146604392, 1.4733431627355944, 1.2676761063753315, 1.101930706308019, 0.9740404953895855, 1.0012056977424237, 0.7686235671371742, 0.5501228216777041, 0.4988934258387616, 0.3713340690024314, 0.36591118458014915, 0.4028291256998099, 0.08388608409841604, 0.0016890254434621106, 0.14452712683650173, 0.04440109740225781, 0.003746854381065208, 6.725993452429114e-05, 0.08726105612761216, 0.09469234789248457, 0.09895014202263255, 0.056077039133660425, 0.24161875395271212, 0.0033785112123727646, 0.07787918348134742, 0.3017565734445786, 0.3470510516457201, 0.39675933788315254, 0.4299740341951034, 0.28141775616917597, 0.5691844805504718, 0.765901134916281, 0.9997098578628334, 0.6651234011325278, 1.1938582145703438, 1.1664070423400723, 1.096998607431291, 1.380454879163794, 1.3422277707876424, 1.8006947050183029, 1.799240598341673, 1.7067868987180772, 1.7737513131120712, 2.046036003335154, 2.275550029578228, 2.240158958029908, 2.4941569328075555, 2.645267055048944, 2.620356879687357, 2.8385481642373014, 3.0030455084576344, 3.1235109120639954, 3.370468110551705, 3.5037936168685198, 3.583098914697202, 3.6033722489288724, 3.843642914953284, 3.6697148335333143, 3.9572804483957675, 4.184865915957122, 4.082804333494769, 4.392535126600299, 4.5022104194824, 4.737450290491978, 4.918351043744636, 4.988031869328076, 5.286531669540848, 5.013457730594986, 5.165057972611091, 5.182326290444847, 5.288994412020239, 5.0783450108186585, 5.495239420357436, 5.587846317333591, 5.241957123748756, 5.505484534298006, 5.593734090036516, 5.4289170513039595, 5.417594409617507, 5.596271214086357, 5.422891609539219, 5.781227776187691, 5.7934454279729355, 5.629357697946759, 5.558502907113402, 5.6215852188967395, 5.729440960329497, 5.765846771502464, 5.5475860835487065, 5.484463743004104, 5.559987751189949, 5.563468999329086, 5.47390618566805, 5.4446562864088035, 5.462955548114435, 5.535115583633433, 5.579897225663434, 5.399483984673656, 5.497029107612461, 5.1954933384931605, 5.336679095271277, 5.356194957843, 5.3114508671782765, 5.239888704404704, 5.3468892987052055, 5.187577243882797, 5.383854999490177, 5.490158310496449, 5.244612067635257, 5.288134005190862, 5.191260945208205, 5.154446051075388, 5.008097738027116, 5.208613949327173, 5.323639858350983, 5.27448764227119, 5.007682463283734, 4.825487271217932, 4.996708066886809, 4.817972734540316, 4.713015449867451, 4.737269726884121, 4.446223737777595, 4.673523415989043, 4.48610728038721, 4.064091726624428, 4.143766310722885, 4.032467570198081, 4.094183204448622, 4.084966948534452, 4.1096751953463295, 3.729849669845529, 3.562045789035577, 3.3170361024548534, 3.2860106236171047, 3.483961803494465, 3.26885611900887, 2.8620235660772746, 2.769683800830557, 2.882301968143526, 2.8749281922758394, 2.850287308420107, 2.317760683368034, 2.3209329235276055, 2.281603734840494, 2.0740084933072063, 1.9331286155277787, 1.9182290893881606, 1.8767447906075083, 1.774700269357909, 1.6027153878303027, 1.2706378284167363, 1.3902953173817871, 1.3405542236794996, 0.9717541168293902, 0.914839214165575, 0.9808298494875929, 0.7460192835331106, 0.5448680859765508, 0.527372731660336, 0.29287021635853183, 0.1051428074275837))
		
				#print(len(self.base_results))
				#print(self.base_results)	
				self.results = dict()
				self.results['Time'] = self.base_results[0][1]
				self.results['Goal Speed'] = self.base_results[1][1]
				self.results['Actual Speed'] = list()
				
				for ind, element in enumerate(self.base_results[2][1]):
					self.results['Actual Speed'].append(element - random.random())
		
				self.result_sender.send_json(self.results)
				#time.sleep(1)
				print('Results sent')
		finally:
			self.result_sender.close()
			self.genome_receiver.close()
			self.context.destroy()
		
if __name__ == '__main__':
	# Parse arguments
	parser = argparse.ArgumentParser(description='Evo-ROS2 test result sender')
	parser.add_argument('-d', '--debug', action='store_true', help='Print extra output to terminal.')
	args, unknown = parser.parse_known_args() # Only parse arguments defined above

	node = Transporter(cmd_args = args)

			
		
		
		
		
