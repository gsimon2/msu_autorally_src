<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from autoRallyPlatform_with_sensors2.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- autoRallyPlatform.urdf.xacro

This file defines a model of the AutoRally autonomous vehicle platform. It is 
derived from the ackermann_vehicle_gazebo ROS package available at
http://wiki.ros.org/ackermann_vehicle_gazebo

Lengths are measured in meters, angles are measured in radians, and masses are
measured in kilograms. All of these values are approximations.

To work with Gazebo, each link must have an inertial element, even if
the link only serves to connect two joints. To be visible in Gazebo, a link
must have a collision element. Furthermore, the link must have a Gazebo
material.

Copyright (c) 2011-2014 Wunderkammer Laboratory

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<robot name="autorally_platform" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- sensor Configuration -->
  <!-- Degree-to-radian conversions -->
  <!-- chassis_length is measured along the x axis, chassis_width
       along the y axis, and chassis_height along the z axis. -->
  <!-- hub_dia and tire_dia are the diameters of the hub and tire,
       respectively. hex_hub_depth is the distance that the hex hub is
       inset from the outer edge of the tire. It is set so that each wheel
       is a "zero offset" wheel. hex_hub_depth = tire_width / 2 -
       axle_length. -->
  <!-- <xacro:property name="hex_hub_depth" value="0.0"/>  -->
  <!-- hex_hub_dist is the distance between left and right hex hubs when
       the shock absorbers are fully extended. axle_length is the distance
       from a U joint to the corresponding hex hub. wheel_travel is the
       vertical wheel travel. -->
  <!-- <xacro:property name="axle_length" value="0.03"/> -->
  <!--<xacro:property name="wheel_travel" value="0.1"/>
  <xacro:property name="shock_z_offset" value="0.11"/> -->
  <!-- shock_eff_limit is 2 * ((shock_stroke / 2) * shock_spring_constant) N.
       For shock_spring_constants, refer to 
       autoRallyPlatformJointCtrlrParams.yaml for spring's constants -->
  <!-- front shock: 2 * ((0.06 / 2) * 3152.28303) = 189.1369818-->
  <!-- rear shock: 2 * ((0.07 / 2) * 4234.88528273) = 296.441969791-->
  <!-- The specifications for a Titan(R) 550 motor could not be found, so the
       stall torque of a Mabuchi Motor(R) RS-550VC-7525 motor was used instead.

       num_spur_gear_teeth = 68
       num_pinion_gear_teeth = 19
       final_gear_ratio = (num_spur_gear_teeth / num_pinion_gear_teeth) *
         5.22 = 18.68
       stall_torque = 0.549 N m
       axle_eff_limit = ((2 * stall_torque) * final_gear_ratio) / 4 =
         5.12766 N m

       max_speed = 60mph = 26.82 m/s
       axle_vel_limit = (2 * pi) * (max_speed / (pi * tire_dia)) =
          2*26.82/0.19 = 282.315789474 rad/s           
       -->
  <!-- These constants are used to simulate a  Savox SV-0235MG servo operated at
       7.4 V. servo_stall_torque is measured in N m. servo_no_load_speed is
       measured in rad/s. -->
  <!-- produces 486.1 oz-in = 3.432620346181713 n-m of torque -->
  <!-- no load speed 0.13 sec/60 deg -> (1/0.13)*60 deg/sec = 8.05536578 rad/s -->
  <material name="chassis_mat">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <!-- Null inertial element. This is needed to make the model work with
       Gazebo. -->
  <!-- Inertia of a thick-walled cylindrical tube with open ends. Height is
       measured along the z axis, which is the tube's axis. inner_rad and
       outer_rad are the tube's inner and outer radii, respectively. Pitch
       MOI is calculated from platform calibration data using bifilar pendulum
       method -->
  <!-- Shock absorbers -->
  <!-- The "wheel" macro defines an axle carrier, axle, and wheel. -->
  <!-- Front wheel -->
  <!-- Rear wheel -->
  <!-- base_link must have geometry so that its axes can be displayed in
       rviz. -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- Chassis -->
  <link name="chassis">
    <visual>
      <origin rpy="0 0 0" xyz="-0.3 0 -0.12"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/Vehicle_Texture.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision name="chassis_collision">
      <origin rpy="0 0 0" xyz="-0.25 0 -0.12"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/Vehicle_Texture.dae" scale="1 1 1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="20.5"/>
      <inertia ixx="0.003881755275" ixy="0" ixz="0" iyy="0.011310597718" iyz="0" izz="0.01243832479"/>
    </inertial>
  </link>
  <gazebo reference="chassis">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
  </gazebo>
  <joint name="base_link_to_chasis" type="fixed">
    <axis xyz="0 -1 -1"/>
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>
  <link name="imu_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="imu_link"/>
  </joint>
  <!-- Wheels -->
  <joint name="left_front_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="left_steering_link"/>
    <!-- ${lr_reflect * ((hex_hub_dist / 2) + lr_reflect*(front_tire_width / 2))} -->
    <origin xyz="0.34                    0.19                    -0.065"/>
    <axis xyz="0 0 -1"/>
    <limit effort="189.1369818" lower="-0.05" upper="0.05" velocity="1000"/>
    <dynamics damping="88" friction="0.0001" spring_reference="0.08" spring_stiffness="3152"/>
  </joint>
  <transmission name="left_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_front_shock_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="left_steering_joint" type="revolute">
    <parent link="left_steering_link"/>
    <child link="left_front_axle_carrier"/>
    <!-- cant the front wheels to improve traction -->
    <axis xyz="0 -0.09950372  0.99503719"/>
    <limit effort="3.43262034618" lower="-0.3665191429" upper="0.3665191429" velocity="8.05536578"/>
  </joint>
  <transmission name="left_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_steering_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_steering_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="left_front_axle" type="continuous">
    <parent link="left_front_axle_carrier"/>
    <child link="left_front_wheel"/>
    <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="2" velocity="282.315789474"/>
    <!-- <dynamics damping="0.015" friction="0.0"/> -->
    <dynamics damping="0.001" friction="0.5"/>
  </joint>
  <!--    <gazebo reference="${lr_prefix}_${fr_prefix}_axle">
      <dampingFactor>0.8</dampingFactor>
    </gazebo>
-->
  <transmission name="left_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_front_axle_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_front_wheel">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformFrontWheelTextured.dae"/>
      </geometry>
    </visual>
    <collision name="collision">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformFrontWheelTextured.dae"/>
      </geometry>
    </collision>
    <collision name="material">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformFrontWheelTextured.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.82"/>
      <inertia ixx="0.00224025030029" ixy="0" ixz="0" iyy="0.0224048079" iyz="0" izz="0.00375929"/>
    </inertial>
    <max_contacts>1</max_contacts>
    <surface>
      <contact>
        <ode>
          <soft_cfm>0.000000001</soft_cfm>
          <soft_erp>0.2</soft_erp>
          <kp>1e+10</kp>
          <kd>10</kd>
          <max_vel>0.01</max_vel>
          <min_depth>0.005</min_depth>
        </ode>
      </contact>
    </surface>
  </link>
  <gazebo reference="left_front_wheel">
    <mu1>0.7</mu1>
    <mu2>0.75</mu2>
  </gazebo>
  <joint name="right_front_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="right_steering_link"/>
    <!-- ${lr_reflect * ((hex_hub_dist / 2) + lr_reflect*(front_tire_width / 2))} -->
    <origin xyz="0.34                    -0.19                    -0.065"/>
    <axis xyz="0 0 -1"/>
    <limit effort="189.1369818" lower="-0.05" upper="0.05" velocity="1000"/>
    <dynamics damping="88" friction="0.0001" spring_reference="0.08" spring_stiffness="3152"/>
  </joint>
  <transmission name="right_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_front_shock_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="right_steering_joint" type="revolute">
    <parent link="right_steering_link"/>
    <child link="right_front_axle_carrier"/>
    <!-- cant the front wheels to improve traction -->
    <axis xyz="0 0.09950372  0.99503719"/>
    <limit effort="3.43262034618" lower="-0.3665191429" upper="0.3665191429" velocity="8.05536578"/>
  </joint>
  <transmission name="right_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_steering_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_steering_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="right_front_axle" type="continuous">
    <parent link="right_front_axle_carrier"/>
    <child link="right_front_wheel"/>
    <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="2" velocity="282.315789474"/>
    <!-- <dynamics damping="0.015" friction="0.0"/> -->
    <dynamics damping="0.001" friction="0.5"/>
  </joint>
  <!--    <gazebo reference="${lr_prefix}_${fr_prefix}_axle">
      <dampingFactor>0.8</dampingFactor>
    </gazebo>
-->
  <transmission name="right_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_front_axle_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_front_wheel">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformFrontWheelTextured.dae"/>
      </geometry>
    </visual>
    <collision name="collision">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformFrontWheelTextured.dae"/>
      </geometry>
    </collision>
    <collision name="material">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformFrontWheelTextured.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.82"/>
      <inertia ixx="0.00224025030029" ixy="0" ixz="0" iyy="0.0224048079" iyz="0" izz="0.00375929"/>
    </inertial>
    <max_contacts>1</max_contacts>
    <surface>
      <contact>
        <ode>
          <soft_cfm>0.000000001</soft_cfm>
          <soft_erp>0.2</soft_erp>
          <kp>1e+10</kp>
          <kd>10</kd>
          <max_vel>0.01</max_vel>
          <min_depth>0.005</min_depth>
        </ode>
      </contact>
    </surface>
  </link>
  <gazebo reference="right_front_wheel">
    <mu1>0.7</mu1>
    <mu2>0.75</mu2>
  </gazebo>
  <joint name="left_rear_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="left_rear_axle_carrier"/>
    <!-- ${lr_reflect * ((hex_hub_dist / 2) + lr_reflect*(front_tire_width / 2))} -->
    <origin xyz="-0.23                    0.2                    -0.065"/>
    <axis xyz="0 0 -1"/>
    <limit effort="296.441969791" lower="-0.055" upper="0.055" velocity="1000"/>
    <dynamics damping="88" friction="0.0"/>
  </joint>
  <transmission name="left_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_rear_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_rear_shock_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="left_rear_axle" type="continuous">
    <parent link="left_rear_axle_carrier"/>
    <child link="left_rear_wheel"/>
    <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="8" velocity="282.315789474"/>
    <!-- <dynamics damping="0.015" friction="0.0"/> -->
    <dynamics damping="0.001" friction="0.5"/>
  </joint>
  <!--    <gazebo reference="${lr_prefix}_${fr_prefix}_axle">
      <dampingFactor>0.8</dampingFactor>
    </gazebo>
-->
  <transmission name="left_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_rear_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_rear_axle_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="left_rear_wheel">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformRearWheelTextured.dae"/>
      </geometry>
    </visual>
    <collision name="collision">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformRearWheelTextured.dae"/>
      </geometry>
    </collision>
    <collision name="material">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformRearWheelTextured.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.89"/>
      <inertia ixx="0.0024707468" ixy="0" ixz="0" iyy="0.0224048079" iyz="0" izz="0.004080205"/>
    </inertial>
    <max_contacts>1</max_contacts>
    <surface>
      <contact>
        <ode>
          <soft_cfm>0.000000001</soft_cfm>
          <soft_erp>0.2</soft_erp>
          <kp>1e+10</kp>
          <kd>10</kd>
          <max_vel>0.01</max_vel>
          <min_depth>0.005</min_depth>
        </ode>
      </contact>
    </surface>
  </link>
  <gazebo reference="left_rear_wheel">
    <mu1>0.7</mu1>
    <mu2>0.75</mu2>
  </gazebo>
  <joint name="right_rear_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="right_rear_axle_carrier"/>
    <!-- ${lr_reflect * ((hex_hub_dist / 2) + lr_reflect*(front_tire_width / 2))} -->
    <origin xyz="-0.23                    -0.2                    -0.065"/>
    <axis xyz="0 0 -1"/>
    <limit effort="296.441969791" lower="-0.055" upper="0.055" velocity="1000"/>
    <dynamics damping="88" friction="0.0"/>
  </joint>
  <transmission name="right_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_rear_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_rear_shock_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="right_rear_axle" type="continuous">
    <parent link="right_rear_axle_carrier"/>
    <child link="right_rear_wheel"/>
    <origin rpy="1.57079633 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="8" velocity="282.315789474"/>
    <!-- <dynamics damping="0.015" friction="0.0"/> -->
    <dynamics damping="0.001" friction="0.5"/>
  </joint>
  <!--    <gazebo reference="${lr_prefix}_${fr_prefix}_axle">
      <dampingFactor>0.8</dampingFactor>
    </gazebo>
-->
  <transmission name="right_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_rear_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_rear_axle_act">
      <!-- This hardwareInterface element exists for compatibility
             with ROS Hydro. -->
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <link name="right_rear_wheel">
    <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformRearWheelTextured.dae"/>
      </geometry>
    </visual>
    <collision name="collision">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformRearWheelTextured.dae"/>
      </geometry>
    </collision>
    <collision name="material">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/autoRallyPlatformRearWheelTextured.dae"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.89"/>
      <inertia ixx="0.0024707468" ixy="0" ixz="0" iyy="0.0224048079" iyz="0" izz="0.004080205"/>
    </inertial>
    <max_contacts>1</max_contacts>
    <surface>
      <contact>
        <ode>
          <soft_cfm>0.000000001</soft_cfm>
          <soft_erp>0.2</soft_erp>
          <kp>1e+10</kp>
          <kd>10</kd>
          <max_vel>0.01</max_vel>
          <min_depth>0.005</min_depth>
        </ode>
      </contact>
    </surface>
  </link>
  <gazebo reference="right_rear_wheel">
    <mu1>0.7</mu1>
    <mu2>0.75</mu2>
  </gazebo>
  <!--  MSU Sensors -->
  <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">
    <alwaysOn>true</alwaysOn>
    <updateRate>50.0</updateRate>
    <bodyName>base_link</bodyName>
    <topicName>zgazebo/odom</topicName>
    <gaussianNoise>0.01</gaussianNoise>
    <frameName>world</frameName>
    <xyzOffsets>0 0 0</xyzOffsets>
    <rpyOffsets>0 0 0</rpyOffsets>
  </plugin>
  <!-- Contact sensor on the chassis of the rover -->
  <gazebo reference="chassis">
    <sensor name="chassis_sensor" type="contact">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <contact>
        <collision>base_link_fixed_joint_lump__chassis_collision_collision</collision>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="chassis_plugin">
        <bumperTopicName>chassis_contact_sensor_state</bumperTopicName>
        <frameName>chassis</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Hokuo Laser Joint -->
  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 0 -1"/>
    <origin rpy="0 0 0" xyz=".14 0 .2"/>
    <parent link="base_link"/>
    <child link="hokuyo"/>
  </joint>
  <!-- Hokuyo Laser -->
  <link name="hokuyo">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://autorally_description/urdf/hokuyo.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <gazebo reference="hokuyo">
    <sensor name="laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="hokuyo_node">
        <topicName>/lidar_front</topicName>
        <frameName>hokuyo</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Forward facing Lidar Sensor -->
  <!--
  <xacro:include filename="$(find ardupilot_sitl_gazebo_plugin)/urdf/sensors/lidar_sensor.urdf.xacro" />
  <xacro:lidar_sensor
    name="lidar_front"
    parent="base_link"
    ros_topic="lidar_front"
    update_rate="10"
    min_range="0.06"
    max_range="20.0"
    field_of_view_horizontal="${180*M_PI/180}"
    field_of_view_vertical="${1*M_PI/180}"
    ray_count_horizontal="542" 
    ray_count_vertical="1"
    sensor_mesh="lidar_lite_v2_withRay/meshes/lidar_lite_v2_withRay.dae">
    <origin xyz="0.5 0 0.1" rpy="0 0 0"/>
  </xacro:lidar_sensor>
-->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/autorally_platform</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu">
      <robotNamespace>/autorally_platform</robotNamespace>
      <serviceName>/imu/calibrate</serviceName>
      <updateRate>200.0</updateRate>
      <bodyName>imu_link</bodyName>
      <frameId>imu_link</frameId>
      <topicName>imu</topicName>
      <rpyOffset>0 0 0</rpyOffset>
      <xyzOffset>0 0 0</xyzOffset>
      <gaussianNoise>0.00000001</gaussianNoise>
      <accelDrift>0.00000001 0.00000001 0.00000001</accelDrift>
      <accelDriftFrequency>0.00000001 0.00000001 0.00000001</accelDriftFrequency>
      <accelGaussianNoise>0.00000001 0.00000001 0.00000001</accelGaussianNoise>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateDriftFrequency>0.0 0.0 0.0</rateDriftFrequency>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <headingDrift>0.0 0.0 0.0</headingDrift>
      <headingDriftFrequency>0.0 0.0 0.0</headingDriftFrequency>
      <headingGaussianNoise>0.0 0.0 0.0</headingGaussianNoise>
    </plugin>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps">
      <updateRate>20.0</updateRate>
      <bodyName>base_link</bodyName>
      <frameId>base_link</frameId>
      <topicName>gpsRoverStatus</topicName>
      <velocityTopicName>fix_velocity</velocityTopicName>
      <referenceLatitude>33.774497</referenceLatitude>
      <referenceLongitude>-84.405001</referenceLongitude>
      <referenceAltitude>309.0</referenceAltitude>
      <drift>0.001 0.001 0.001</drift>
      <gaussianNoise>0.0001 0.0001 0.0001</gaussianNoise>
      <velocityDrift>0 0 0</velocityDrift>
      <velocityGaussianNoise>0.005 0.005 0.05</velocityGaussianNoise>
    </plugin>
    <!-- <plugin name="tire_friction" filename="libTireFrictionPlugin.so">
      <link_name>left_rear_wheel</link_name>
      <collision_name>collision</collision_name>
      <friction_static>1.1</friction_static>
      <friction_dynamic>0.7</friction_dynamic>
      <slip_static>0.10</slip_static>
      <slip_dynamic>0.20</slip_dynamic>
      <speed_static>0.50</speed_static>
    </plugin> -->
  </gazebo>
</robot>
